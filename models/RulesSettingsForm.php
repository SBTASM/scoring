<?php

namespace app\models;

use app\interfaces\RuleInterface;
use yii\base\Model;

/**
 * Class RulesSettings
 * @package app\models
 * @property $keyStorage KeyStorage
 * @property $pointCounts number
 * @property $ruleName string
 */

class RulesSettingsForm extends  Model{
    public $pointCounts;
    public $description;

    public $ruleName;
    protected $keyStorage;

    public function __construct(array $config = [])
    {
        $this->keyStorage = \Yii::$app->keyStorage;
        parent::__construct($config);
    }

    public function rules()
    {
        return array_merge(parent::rules(), [
            [['pointCounts', 'description'], 'required'],
            [['pointCounts'], 'number', 'min' => 1],
            [['description'], 'string', 'max' => 255]
        ]); // TODO: Change the autogenerated stub
    }

    public function setRule($ruleName){
        /**
         * @var $rule RuleInterface
         */
        $rule = new $ruleName;
        $this->description = $rule->getDescription();
        $this->ruleName = $ruleName;
    }
    public function save(){
        $this->keyStorage->set(sprintf("rules.%d.%s", \Yii::$app->getUser()->identity->getId(), $this->ruleName), $this->pointCounts);
    }
}